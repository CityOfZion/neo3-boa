version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:
  unit-test:
    working_directory: ~/neo3-boa
    docker:
      - image: circleci/python:3.8.0
    steps:
      - checkout
      - python/load-cache

      - run:
          name: Install Dependencies
          command: |
            sudo pip install -r requirements_dev.txt

      - python/save-cache
      - run:
          name: Test
          command: |
            wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update; \
              sudo apt-get install -y apt-transport-https && \
              sudo apt-get update && \
              sudo apt-get install -y dotnet-sdk-3.1
            git clone https://github.com/simplitech/neo-devpack-dotnet.git -b test-engine-executable --single-branch
            dotnet build ./neo-devpack-dotnet/src/Neo.TestEngine/Neo.TestEngine.csproj -o ./TestEngine
            python -m unittest discover boa3_test

  build_deploy: &build_deploy
    working_directory: ~/neo3-boa
    docker:
      - image: circleci/python:3.8.0
    steps:
      - checkout

      - run:
          name: Setup Environment
          command: |
            python3 -m venv venv
            source venv/bin/activate

      - run:
          name: Install Deps
          command: |
            sudo pip install -r requirements_dev.txt

      - run:
          name: Build .pypirc
          command: |
            echo -e "[$PYPI_REPO]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Build Package
          command: |
            python3 setup.py sdist bdist_wheel
            twine check dist/*

      - run:
          name: Push to TestPyPi
          command:
            python3 -m twine upload --repository $PYPI_REPO dist/*
  build_deploy_test:
    <<: *build_deploy
  build_deploy_prod:
    <<: *build_deploy

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - unit-test:
         filters:
           tags:
             only: /.*/
      - build_deploy_test:
         context: pypi_test
         requires:
           - unit-test
         filters:
           tags:
             only: /^v.*/
           branches:
             ignore: /.*/
      - approve-release:
          type: approval
          requires:
            - build_deploy_test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build_deploy_prod:
          context: pypi_prod
          requires:
            - approve-release
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
